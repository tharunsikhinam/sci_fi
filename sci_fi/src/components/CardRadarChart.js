import React, { Component } from 'react';
import { withStyles } from '@material-ui/core/styles';
import Card from '@material-ui/core/Card';
import CardActions from '@material-ui/core/CardActions';
import CardContent from '@material-ui/core/CardContent';
import Button from '@material-ui/core/Button';
import Typography from '@material-ui/core/Typography';
import {Radar} from 'react-chartjs-2';



const styles = {
    card: {
        marginLeft: '4vw',
        display: 'inherit',
        width: '40vw',
        transitionDuration: '0.3s',
        height: '35vh'

    },
    bullet: {
        display: 'inline-block',
        margin: '0 2px',
        transform: 'scale(0.8)',
    },
    title: {
        fontSize: 14,
    },
    pos: {
        marginBottom: 12,
    },
};

const sub_genre={"1896":[0,0,10000,10000,10000,0,10000],"1897":[0,10000,0,10000,10000,10000,10000],"1898":[1430,2860,1430,10000,0,4290,8570],"1899":[3330,3330,3330,10000,0,0,10000],"1900":[0,5000,0,10000,0,0,10000],"1901":[0,5000,5000,10000,0,0,10000],"1902":[0,10000,0,10000,0,0,5000],"1903":[0,3330,0,10000,2220,2220,7780],"1904":[0,5000,5000,10000,5000,0,10000],"1905":[5000,0,5000,10000,0,10000,10000],"1906":[2500,2500,2500,10000,0,2500,7500],"1907":[0,3330,0,10000,0,0,0],"1908":[0,5000,5000,5000,0,0,0],"1909":[0,0,3330,10000,3330,3330,6670],"1910":[3330,6670,0,6670,6670,0,3330],"1911":[0,5000,0,10000,0,5000,0],"1912":[0,10000,0,5000,0,0,5000],"1914":[0,10000,0,10000,0,0,0],"1915":[0,5000,5000,10000,5000,0,0],"1916":[0,10000,5000,5000,0,5000,5000],"1917":[0,0,0,10000,10000,0,0],"1918":[0,10000,10000,10000,0,0,0],"1919":[0,10000,10000,10000,0,10000,10000],"1920":[0,0,0,0,5000,0,5000],"1921":[0,3330,6670,10000,0,0,0],"1922":[3330,6670,3330,10000,3330,3330,3330],"1923":[0,0,6670,10000,0,0,0],"1924":[1250,7500,3750,8750,2500,3750,2500],"1925":[0,0,3330,6670,6670,0,3330],"1926":[0,6670,3330,10000,0,3330,0],"1927":[0,10000,10000,0,0,0,0],"1928":[5000,10000,5000,10000,5000,5000,5000],"1929":[0,0,0,5000,5000,0,5000],"1930":[0,10000,0,5000,10000,0,10000],"1931":[0,5000,5000,0,5000,5000,0],"1932":[2000,6000,6000,8000,6000,2000,4000],"1933":[0,4290,1430,5710,2860,7140,0],"1934":[2000,8000,4000,8000,6000,2000,0],"1935":[1110,6670,5560,7780,2220,5560,1110],"1936":[3000,3000,5000,3000,4000,3000,3000],"1937":[1670,8330,5000,10000,3330,1670,5000],"1938":[0,6670,3330,6670,0,3330,3330],"1939":[1430,2860,7140,5710,2860,4290,1430],"1940":[3640,4550,3640,5450,3640,6360,3640],"1941":[2730,3640,5450,7270,4550,1820,2730],"1942":[3330,4440,6670,8890,1110,4440,1110],"1943":[5000,7500,6250,8750,3750,6250,3750],"1944":[1000,4000,3000,8000,3000,4000,1000],"1945":[1430,7140,4290,8570,1430,4290,1430],"1946":[4000,10000,8000,10000,0,6000,0],"1947":[2000,8000,2000,10000,2000,2000,2000],"1948":[1430,4290,2860,8570,1430,0,0],"1949":[0,6250,3750,8750,0,1250,0],"1950":[2860,5710,5710,4290,1430,4290,4290],"1951":[2500,6250,6250,5620,1880,3120,4380],"1952":[2500,4170,3330,6670,4170,3330,2500],"1953":[2380,4290,5240,2860,2860,2380,5240],"1954":[3570,5710,5710,2140,5710,3570,5710],"1955":[2670,3330,4670,3330,6670,4670,5330],"1956":[2960,5560,5560,2960,4810,2590,3330],"1957":[4670,4670,5330,4000,5670,3670,2670],"1958":[4360,6410,5380,2310,6150,2820,5380],"1959":[3640,5150,6060,3330,3030,2420,4850],"1960":[1600,6800,5200,5200,2800,4000,3200],"1961":[400,6000,5200,4800,4000,3200,2400],"1962":[2730,7270,4090,4550,3640,3640,3640],"1963":[2350,7060,4120,4710,4120,1760,4710],"1964":[1790,6790,5000,6070,3210,3930,3570],"1965":[4670,6670,6330,2330,5330,4330,5000],"1966":[2860,6290,4570,2860,4570,4290,3430],"1967":[3000,7000,5670,4000,3330,4000,4670],"1968":[2970,4860,5950,4860,3510,3780,3780],"1969":[3460,5380,6150,4620,3080,5000,3080],"1970":[2500,5830,3750,5420,3750,2080,2920],"1971":[2330,5670,6670,4000,3670,2670,4330],"1972":[3210,6070,6430,5360,4290,3210,4640],"1973":[2890,6580,5260,4210,2110,3420,3420],"1974":[3700,5560,4440,5190,3700,2590,3700],"1975":[2400,6400,5200,5600,4000,4000,4400],"1976":[4070.0000000000005,5560,3700,5930,1850,2590,3330],"1977":[3260,5650,5430,5000,3480,2830,3040],"1978":[4380,7190,5620,5000,3440,4059.9999999999995,4059.9999999999995],"1979":[3720,6980,6280,2560,2790,3720,4190],"1980":[3270,5000,6350,5190,2120,4420,4040],"1981":[3240,5680,7030,3780,2160,2700,3780],"1982":[3440,5000,6560,4380,2029.9999999999998,5000,3440],"1983":[2150,6920,7230,5380,1690,3540,3230],"1984":[1860,7000,6290,4570,2710,4710,4430],"1985":[3040,5360,6430,6070,2860,3930,3390],"1986":[3730,5420,5250,4240,2710,4240,4920],"1987":[3830,6790,6420,5560,2720,3950,3700],"1988":[3010,6440,4660,5340,2050,3560,4520],"1989":[2740,7260,6030,4660,2470,4660,3560],"1990":[3280,7340,6090,4059.9999999999995,2810,5000,3590],"1991":[2670,5670,6500,5170,2330,5670,3330],"1992":[2500,7880,7500,5770,2310,5960,4230],"1993":[3810,6350,5400,4920,2540,6030,3020],"1994":[2800,7070,6400,4930,3200,5870,2670],"1995":[3410,6700,6480,4430,2840,4200,3180],"1996":[3330,6670,5130,4490,2310,4870,3330],"1997":[3740,7030,6150,5380,2200,4950,3080],"1998":[3290,6120,5410,5290,2240,5060,3530],"1999":[2860,6900,5830,5360,2020,4760,4520],"2000":[2360,6390,5140,5420,2780,5420,3190],"2001":[2760,6840,4900,5310,2550,4490,4290],"2002":[3360,6540,5330,4490,2240,4670,3740],"2003":[3750,6360,6020,3980,1700,4430,2610],"2004":[3980,6220,5610,4690,3160,3980,3270],"2005":[3210,7230,5980,5620,3750,4460,3480],"2006":[2980,7480,5420,5570,2820,3820,2750],"2007":[3230,6850,6290,5160,2740,4760,3310],"2008":[3290,6510,6240,5300,2950,5030,4230],"2009":[3460,6590,6490,4590,2160,4430,4220],"2010":[3510,7010,6170,5000,2990,4220,2730],"2011":[3430,6910,5670,4890,2420,4380,3480],"2012":[3590,6340,5770,4860,2540,3870,3450],"2013":[3640,6480,5800,4490,2730,4150,3520],"2014":[4130,7280,6470,4180,2280,4350,3590],"2015":[3150,6480,5070,4370,2540,3570,3000],"2016":[3990,6850,6150,4830,2660,3990,3850],"2017":[4740,6670,6280,4230,1920,3850,3850],"2018":[10000,10000,10000,10000,10000,10000,10000],"2020":[0,10000,0,10000,0,10000,0],"NaT":[2860,4290,1430,0,2860,5710,0]}
class CardRadarChart extends Component {
    constructor(props)
    {
        super(props);
    }

  render() {
        var data={};
        if(this.props.yearsSelect.selected )
        {
            data ={
                labels: ['Alien', 'AI/Robot', 'Dystopian', 'Fantasy', 'Monster',  'Time Travel','Space'],
                datasets: [
                    {
                        radius: 0,
                        label: this.props.yearsSelect.selected ,
                        backgroundColor: 'rgba(179,181,198,0.2)',
                        borderColor: '#fff',
                        pointBackgroundColor: 'rgba(179,181,198,1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(179,181,198,1)',
                        data: sub_genre[this.props.yearsSelect.selected]
                    }
                ]
            }
            if(this.props.years.selected && (this.props.yearsSelect.selected!=this.props.years.selected))
            {
                data.datasets.push({
                    radius: 0,
                    label: this.props.years.selected,
                    backgroundColor: 'rgba(179,181,198,0.2)',
                    borderColor: '#2196f3',
                    pointBackgroundColor: 'rgba(179,181,198,1)',
                    pointBorderColor: '#fff',
                    pointHoverBackgroundColor: '#fff',
                    pointHoverBorderColor: 'rgba(179,181,198,1)',
                    data: sub_genre[this.props.years.selected]
                })
            }
        }
        else if(this.props.years.selected)
        {
            data ={
                labels: ['Alien', 'AI/Robot', 'Dystopian', 'Fantasy', 'Monster',  'Time Travel','Space'],
                datasets: [
                    {
                        radius: 0,
                        label: this.props.years.selected,
                        backgroundColor: 'rgba(179,181,198,0.2)',
                        borderColor: '#2196f3',
                        pointBackgroundColor: 'rgba(179,181,198,1)',
                        pointBorderColor: '#fff',
                        pointHoverBackgroundColor: '#fff',
                        pointHoverBorderColor: 'rgba(179,181,198,1)',
                        data: sub_genre[this.props.years.selected]
                    }
                ]
            }
        }
      const data2 = {
          labels: ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'],
          datasets: [
              {
                  //radius: 0,
                  label: this.props.years.selected ? this.props.years.selected : (this.props.yearsSelect.selected? this.props.years.selected:null),
                  backgroundColor: 'rgba(179,181,198,0.2)',
                  borderColor: 'rgba(179,181,198,1)',
                  pointBackgroundColor: 'rgba(179,181,198,1)',
                  pointBorderColor: '#fff',
                  pointHoverBackgroundColor: '#fff',
                  pointHoverBorderColor: 'rgba(179,181,198,1)',
                  data: [65, 59, 90, 81, 56, 55, 40]
              },
              {
                  //radius: 0,
                  label: 'My Second dataset',
                  backgroundColor: 'rgba(255,99,132,0.2)',
                  borderColor: 'rgba(255,99,132,1)',
                  pointBackgroundColor: 'rgba(255,99,132,1)',
                  pointBorderColor: '#000',
                  pointHoverBackgroundColor: '#000',
                  pointHoverBorderColor: 'rgba(255,99,132,1)',
                  data: [28, 48, 40, 19, 96, 27, 100]
              }
          ]
      };

      const { classes } = this.props;
      const bull = <span className={classes.bullet}>â€¢</span>;

      return (
      <div >
          <Card className={classes.card} style={{justifyContent: "center"}}>
              <div style={{height: '30vh',overflow: "hidden"}}>
                  {this.props.yearsSelect.index || this.props.years.index ? <Radar

                      options={{
                          animation:{
                              easing: 'linear',
                              duration: 500
                          },
                          scales: {
                              tickColor: "#eee",
                              fontSize: 20,
                              fontFamily: "futura-bold-font",
                              ticks: {

                                  min:0,
                                  display: false
                              },

                          },
                          responsive: true,
                          height: "100%",
                          maintainAspectRatio: false,
                          legend: {
                              labels: {
                                  fontSize: 20,
                                  fontFamily: "futura-bold-font",
                                  fontColor: 'rgba(255, 255, 255, 0.7)'
                              }
                          },
                          scale: {
                              gridLines: {
                                  color: 'white'
                              },
                              fontSize: '20px',
                              pointLabels:{
                                  fontFamily: "futura-medium-bt",
                                  fontSize: 16,
                                  fontColor: 'white',
                              },
                              ticks: {
                                  min:0,
                                  display: false
                              },
                          }
                      }}

                      data={data} />:null}

              </div>

          </Card>
      </div>
    );
  }
}

export default withStyles(styles)(CardRadarChart);
var x=[]
var z1={}
x.map((node)=>{z1[node.year].push(node.alien); z1[node.year].push(node.monster); z1[node.year].push(node.space); z1[node.year].push(node.robot); z1[node.year].push(node.time_travel); z1[node.year].push(node.dystopian); z1[node.year].push(node.fantasy); })
